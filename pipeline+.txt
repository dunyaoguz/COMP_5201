add r1, r1, 8
l.d f8, 4(r1)

The value r1 will be ready in the latch between cycle 3 and 4
The x box will need it in the cycle 4, the value of r1 was ready at the end of cycle 3 
There is no stall


The dependency is that first instruction calculates r1 and the value of r1 will be ready 
in the pipeline at end of cycle 3.
The second instruction needs the value of r1 at the beginning of cycle 4
for the x-box to calculate the memory address 4+r1. No stall in this case






l.d f8, 4(r1)
add f6, f8, f4


The first instruction calculates the value of f8 from memory. The value of f8 will be available
in the pipeline at the end of cycle 4.The add instruction needs this value at beginning of cycle 4
for the x-box so a stall will take place and the x-box will execute the add operation in cycle 5.












